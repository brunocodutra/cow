sudo: required
language: cpp

git:
  depth: 1

env:
  global:
    secure: m8wUzZ7Mu1m8O0fNGQth8ZAOq07sbWh2HLyQqWZlUyWwC2Q3XBTbS2GvEj/7T0iLtw83VW6XnAuDqvSnZMaJvku1oAdElNeGS+OA0QwnJ7WHE0fWCPlHWmQt5pPbEU/WCJLxUzzFikuw3aWsTBYEKNJkM10wxXZnu/fhnGRRT1h3yCrkf3Uqm77IyqxXKH/mjs1YNpZRRyKQ0O7P2Eey24H5CRZIz4Sba3mRGHX6XIg/nG081xxBRZCBNpvwNRe/HFi2VOG2Pl96qdy6hoEkZw5nVGn/bzawCgx9M+alLGyR2X5iLrMn6Ji5v3GU2jc42ocYfnUpwD/6bQ+ZzgXCnrVFSEYEV59heLQn5q9Sh8rK7ZYbwoXRnGV2VZRNJPeqbpm6osfrRyAH8CxeJhT+U15oqznsAfj6gShCtDakhfOcMECnl1BHy0FXWR0QtATkk46tjUixJoLD8fBcHT+KOMj7B3Cj9geVLJguOyRlwUmqoTq/oEPRNigbquwGjCtj95MuFo+CCe+H0qd72dLrcCWFQpz+xqdiH7pF/T5PH6xGzsZhrvIwXJC1TMevtBLp+2IqJAKQtvF44YkToYlXQKguZSVIgVndQrB3T86ZLIAp8uLXNXC93kwrcgkxRDL0jFB7rmsMkI6zBrQ/d5gb6RLLrSlCcRdDADvKKc46bpo=

addons:
  apt:
    packages:
    - tree
    - g++-7
    - g++-8
    - cppcheck
    - clang-5.0
    - clang-tidy-5.0
    - clang-6.0
    - clang-tidy-6.0
    sources: &srcs
    - ubuntu-toolchain-r-test
    - llvm-toolchain-trusty-5.0
    - llvm-toolchain-trusty-6.0

stages:
- test
- lint
- deploy

jobs:
  include:
  - os: linux
    dist: trusty
    stage: test
    compiler: g++
    env: VERSION=7

  - os: linux
    dist: trusty
    stage: test
    compiler: g++
    env: VERSION=8

  - os: linux
    dist: trusty
    stage: test
    compiler: clang++
    env: VERSION=5.0

  - os: linux
    dist: trusty
    stage: test
    compiler: clang++
    env: VERSION=6.0

  - os: linux
    dist: trusty
    stage: lint
    compiler: clang++
    env: VERSION=6.0
    script: (cd "${BUILD_PATH}" && ctest --output-on-failure -R ^test.format)
    addons:
      apt:
        packages:
        - clang-6.0
        - clang-format-6.0
        sources: *srcs

  - os: linux
    dist: trusty
    stage: deploy
    compiler: g++
    env: VERSION=7
    script: cmake --build "${BUILD_PATH}" --target install && tree "${INSTALL_PATH}"
    deploy:
      provider: pages
      target-branch: standalone
      github-token: $GH_TOKEN
      skip-cleanup: true
      keep-history: true
      allow-empty-commit: true
      local-dir: install/include
      on:
        tags: true

before_install:
- SOURCE_PATH="${TRAVIS_BUILD_DIR}"

- BUILD_PATH="${TRAVIS_BUILD_DIR}/build"
- mkdir -p "${BUILD_PATH}"

- INSTALL_PATH="${TRAVIS_BUILD_DIR}/install"
- mkdir -p "${INSTALL_PATH}"

- DEPS_PATH="${TRAVIS_BUILD_DIR}/deps"
- mkdir -p "${DEPS_PATH}"

- GITHUB_PATH="${TRAVIS_BUILD_DIR}/github"
- mkdir -p "${GITHUB_PATH}"

- export CXXFLAGS="${CXXFLAGS} -fsanitize=address,undefined"

- |
  if [[ "${CXX}" == "g++" ]]
  then
    export CXXFLAGS="${CXXFLAGS} -fuse-ld=gold"
  fi

- |
  if [[ -n "${VERSION}" ]]
  then
    export CC="${CC}-${VERSION}"
    export CXX="${CXX}-${VERSION}"
  fi

install:
- |
  if [[ ${CC} == clang* && ${CXX} == clang++* ]]
  then
    git clone --depth 1 http://llvm.org/git/llvm.git "${DEPS_PATH}/llvm" || exit $?
    git clone --depth 1 http://llvm.org/git/libcxx.git "${DEPS_PATH}/llvm/projects/libcxx" || exit $?
    git clone --depth 1 http://llvm.org/git/libcxxabi.git "${DEPS_PATH}/llvm/projects/libcxxabi" || exit $?

    LLVM_CMAKE_ARGS+=(-H"${DEPS_PATH}/llvm")
    LLVM_CMAKE_ARGS+=(-B"${DEPS_PATH}/llvm/build")
    LLVM_CMAKE_ARGS+=(-DCMAKE_INSTALL_PREFIX="${DEPS_PATH}/llvm/install")
    LLVM_CMAKE_ARGS+=(-DLLVM_USE_SANITIZER="Undefined;Address")

    CFLAGS="" CXXFLAGS="" LDFLAGS="" cmake ${LLVM_CMAKE_ARGS[@]} || exit $?
    make -C "${DEPS_PATH}/llvm/build" -j install-cxx install-cxxabi || exit $?

    export CXXFLAGS="${CXXFLAGS} -stdlib=libc++ -nostdinc++ -isystem ${DEPS_PATH}/llvm/install/include/c++/v1"
    export LD_LIBRARY_PATH="${LD_LIBRARY_PATH}:${DEPS_PATH}/llvm/install/lib"
    export LDFLAGS="${LDFLAGS} -L${DEPS_PATH}/llvm/install/lib"
  fi

before_script:
- CMAKE_ARGS+=("-H${SOURCE_PATH}")
- CMAKE_ARGS+=("-B${BUILD_PATH}")
- CMAKE_ARGS+=("-DCMAKE_INSTALL_PREFIX=${INSTALL_PATH}")

- |
  if [[ ${CC} == clang* && ${CXX} == clang++* ]]
  then
    CMAKE_ARGS+=("-DCLANG_TIDY=/usr/bin/clang-tidy-${VERSION}")
    CMAKE_ARGS+=("-DCLANG_FORMAT=/usr/bin/clang-format-${VERSION}")
  fi

- cmake ${CMAKE_ARGS[@]}

script:
- (cd "${BUILD_PATH}" && ctest --output-on-failure -E ^test.format)
