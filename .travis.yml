sudo: required
language: cpp

git:
  depth: 1

env:
  global:
    secure: m8wUzZ7Mu1m8O0fNGQth8ZAOq07sbWh2HLyQqWZlUyWwC2Q3XBTbS2GvEj/7T0iLtw83VW6XnAuDqvSnZMaJvku1oAdElNeGS+OA0QwnJ7WHE0fWCPlHWmQt5pPbEU/WCJLxUzzFikuw3aWsTBYEKNJkM10wxXZnu/fhnGRRT1h3yCrkf3Uqm77IyqxXKH/mjs1YNpZRRyKQ0O7P2Eey24H5CRZIz4Sba3mRGHX6XIg/nG081xxBRZCBNpvwNRe/HFi2VOG2Pl96qdy6hoEkZw5nVGn/bzawCgx9M+alLGyR2X5iLrMn6Ji5v3GU2jc42ocYfnUpwD/6bQ+ZzgXCnrVFSEYEV59heLQn5q9Sh8rK7ZYbwoXRnGV2VZRNJPeqbpm6osfrRyAH8CxeJhT+U15oqznsAfj6gShCtDakhfOcMECnl1BHy0FXWR0QtATkk46tjUixJoLD8fBcHT+KOMj7B3Cj9geVLJguOyRlwUmqoTq/oEPRNigbquwGjCtj95MuFo+CCe+H0qd72dLrcCWFQpz+xqdiH7pF/T5PH6xGzsZhrvIwXJC1TMevtBLp+2IqJAKQtvF44YkToYlXQKguZSVIgVndQrB3T86ZLIAp8uLXNXC93kwrcgkxRDL0jFB7rmsMkI6zBrQ/d5gb6RLLrSlCcRdDADvKKc46bpo=

addons:
  apt:
    packages:
    - tree
    - g++-7
    - g++-8
    - cppcheck
    - clang-5.0
    - clang-6.0
    - clang-tidy-5.0
    - clang-tidy-6.0
    - clang-format-6.0
    sources:
    - ubuntu-toolchain-r-test
    - llvm-toolchain-trusty-5.0
    - llvm-toolchain-trusty-6.0

stages:
- test
- lint
- deploy

jobs:
  include:
  - os: linux
    dist: trusty
    stage: test
    compiler: g++
    env: VERSION=7

  - os: linux
    dist: trusty
    stage: test
    compiler: g++
    env: VERSION=8

  - os: linux
    dist: trusty
    stage: test
    compiler: clang++
    env: VERSION=5.0

  - os: linux
    dist: trusty
    stage: test
    compiler: clang++
    env: VERSION=6.0

  - os: linux
    dist: trusty
    stage: lint
    compiler: g++
    env: VERSION=8
    script:
      - cmake --build "${BUILD_PATH}" --target coverage
      - bash <(curl -s https://codecov.io/bash) -f "${BUILD_PATH}/test/coverage/cov.stripped"

  - os: linux
    dist: trusty
    stage: lint
    compiler: clang++
    env: VERSION=6.0
    script: (cd "${BUILD_PATH}" && ctest --output-on-failure -R ^test.format)

  - os: linux
    dist: trusty
    stage: deploy
    compiler: g++
    env: VERSION=7
    script: cmake --build "${BUILD_PATH}" --target install && tree "${INSTALL_PATH}"
    deploy:
      provider: pages
      target-branch: standalone
      github-token: $GH_TOKEN
      skip-cleanup: true
      keep-history: true
      allow-empty-commit: true
      local-dir: install/include
      on:
        tags: true

before_install:
- SOURCE_PATH="${TRAVIS_BUILD_DIR}"

- BUILD_PATH="${TRAVIS_BUILD_DIR}/build"
- mkdir -p "${BUILD_PATH}"

- INSTALL_PATH="${TRAVIS_BUILD_DIR}/install"
- mkdir -p "${INSTALL_PATH}"

- DEPS_PATH="${TRAVIS_BUILD_DIR}/deps"
- mkdir -p "${DEPS_PATH}"

- BIN_PATH="${TRAVIS_BUILD_DIR}/bin"
- mkdir -p "${BIN_PATH}"
- export PATH="${BIN_PATH}:${PATH}"

- ln -s "/usr/bin/${CC}-${VERSION}" "${BIN_PATH}/${CC}"
- ln -s "/usr/bin/${CXX}-${VERSION}" "${BIN_PATH}/${CXX}"
- ln -s "/usr/bin/gcov-${VERSION}" "${BIN_PATH}/gcov"
- ln -s "/usr/bin/clang-tidy-${VERSION}" "${BIN_PATH}/clang-tidy"
- ln -s "/usr/bin/clang-format-${VERSION}" "${BIN_PATH}/clang-format"

- export CXXFLAGS="${CXXFLAGS} -fsanitize=address,undefined"

- |
  if [[ "${CXX}" == "g++" ]]
  then
    export CXXFLAGS="${CXXFLAGS} -fuse-ld=gold"
  fi

install:
- |
  if [[ "${TRAVIS_BUILD_STAGE_NAME}" == "Lint" ]]
  then
    git clone --depth 1 https://github.com/linux-test-project/lcov.git "${DEPS_PATH}/lcov" || exit $?
    DESTDIR="${DEPS_PATH}/lcov/" make PREFIX=install -C "${DEPS_PATH}/lcov/" install || exit $?
    export PATH="${DEPS_PATH}/lcov/install/bin/:${PATH}"
  fi

before_script:
- CMAKE_ARGS+=("-H${SOURCE_PATH}")
- CMAKE_ARGS+=("-B${BUILD_PATH}")
- CMAKE_ARGS+=("-DCMAKE_BUILD_TYPE=Debug")
- CMAKE_ARGS+=("-DCMAKE_INSTALL_PREFIX=${INSTALL_PATH}")
- cmake ${CMAKE_ARGS[@]}

script:
- (cd "${BUILD_PATH}" && ctest --output-on-failure -E ^test.format)
